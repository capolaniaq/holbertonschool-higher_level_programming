Doctest BaseGeometry class



``BaseGeometry()`` class that inherits from list with
Public instance method: def integer_validator(self, name, value):

Import the function

    >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

test

    >>> bg = BaseGeometry()
    >>> bg.integer_validator("name", "John")
    Traceback (most recent call last):
            ...
    TypeError: name must be an integer

    >>> bg.integer_validator("age", 0)
    Traceback (most recent call last):
            ...
    ValueError: age must be greater than 0

    >>> bg.integer_validator("distance", -4)
    Traceback (most recent call last):
            ...
    ValueError: distance must be greater than 0

    >>> bg.integer_validator("my_int", 12)
    >>>

    >>> bg.integer_validator("my_int", 12.1212)
    Traceback (most recent call last):
            ...
    TypeError: my_int must be an integer

    >>> bg.integer_validator(NULL, 12)
    Traceback (most recent call last):
            ...
    NameError: name 'NULL' is not defined

    >>> bg.integer_validator(“age”)
    Traceback (most recent call last):
            ...
    SyntaxError: invalid character in identifier

    >>> bg.integer_validator("name",[1])
    Traceback (most recent call last):
            ...
    TypeError: name must be an integer

    >>> bg.integer_validator("name","1")
    Traceback (most recent call last):
            ...
    TypeError: name must be an integer

    >>> bg.integer_validator()
    Traceback (most recent call last):
            ...
    TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

    >>> bg.integer_validator(“age”, None)
    Traceback (most recent call last):
            ...
    SyntaxError: invalid character in identifier

    >>> bg.integer_validator(“age”, {3,2})
    Traceback (most recent call last):
            ...
    SyntaxError: invalid character in identifier

    >>> bg.integer_validator(“age”, True)
    Traceback (most recent call last):
            ...
    SyntaxError: invalid character in identifier

    >>> bg.area(2)
    Traceback (most recent call last):
            ...
    TypeError: area() takes 1 positional argument but 2 were given